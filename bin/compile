#!/bin/bash

BUILD_DIR=$1
CACHE_DIR=$2
METEOR_HOME=$BUILD_DIR/.meteor/local
PATH=$METEOR_HOME/usr/bin:$METEOR_HOME/usr/lib/meteor/bin:$PATH

indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";; # mac/bsd sed: -l buffers on line boundaries
    *)      sed -u "$c";; # unix/gnu sed: -u unbuffered (arbitrary) chunks of data
  esac
}

status() {
  echo "-----> $*"
}

node_version=$(curl --silent --get https://semver.io/node/resolve/4.4.X)

install_node() {
  if [ -f "$BUILD_DIR/.vendor/node/bin/node" ] ; then
    status "Skipping Node installation. Already installed."
    return
  fi

  # Download node from Heroku's S3 mirror of nodejs.org/dist
  status "Downloading and installing node $node_version"
  NODE_INSTALLER=node-installer.tar.gz
  NODE_URL="http://s3pository.heroku.com/node/v$node_version/node-v$node_version-linux-x64.tar.gz"
  curl $NODE_URL > $NODE_INSTALLER
  tar xzf $NODE_INSTALLER -C $BUILD_DIR

  # Move node (and npm) into ./.vendor and make them executable
  mkdir -p $BUILD_DIR/.vendor
  mv $BUILD_DIR/node-v$node_version-linux-x64 $BUILD_DIR/.vendor/node
  chmod +x $BUILD_DIR/.vendor/node/bin/*
  PATH=$BUILD_DIR/.vendor/node/bin:$PATH
}

build() {
  (
    status "Installing npm dependencies"
    cd bundle/programs/server
    npm install
    mv $BUILD_DIR/.vendor $BUILD_DIR/vendor
  )
}

[ ! -d $BUILD_DIR ] && mkdir $BUILD_DIR
[ ! -d $CACHE_DIR ] && mkdir $CACHE_DIR

install_node
build

status "Checking for post_compile script"
if [ -f $BUILD_DIR/bin/post_compile ] ; then
    status "Running post_compile hook"
    chmod +x $BUILD_DIR/bin/post_compile
    $BUILD_DIR/bin/post_compile
fi
